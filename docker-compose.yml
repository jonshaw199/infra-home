services:
  nginx:
    image: openresty/openresty:alpine
    ports:
      - "80:80"
      - "443:443"
      - "444:444"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/letsencrypt # This is where your SSL certs are stored
      - ./nginx/html:/var/www/html # Directory to serve .well-known for Certbot
      - ./nginx/logs:/var/log/nginx
      - ./nginx/lua:/etc/nginx/lua
    command: [
        "/usr/local/openresty/nginx/sbin/nginx",
        "-g",
        "daemon off;",
        "-c",
        # Specify custom nginx.conf that loads lua modules
        "/etc/nginx/nginx.conf",
      ]
    networks:
      - my_network
      - home_home_network
    restart: unless-stopped

  shaw-family:
    build: ./shaw-family
    networks:
      - my_network
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: unless-stopped

  jonshaw199:
    build: ./jonshaw199
    networks:
      - my_network
    ports:
      - "3001:80"
    expose:
      - "80"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certificates:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - my_network
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    environment:
      TZ: "America/Los_Angeles"
      WEBPASSWORD: "admin"
    volumes:
      - ./pihole:/etc/pihole
      - ./dnsmasq.d:/etc/dnsmasq.d
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8085:80" # Map Pi-hole's web interface to port 8085
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN # Allows Pi-hole to manage network traffic
    restart: unless-stopped

networks:
  my_network:
    driver: bridge
  home_home_network: # Note the `home_` prefix!
    external: true
