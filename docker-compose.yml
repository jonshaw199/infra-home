services:
  nginx:
    image: openresty/openresty:alpine
    ports:
      - "80:80"
      - "443:443"
      - "444:444"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certificates:/etc/letsencrypt # This is where your SSL certs are stored
      - ./nginx/html:/var/www/html # Directory to serve .well-known for Certbot
      - ./nginx/logs:/var/log/nginx
      - ./nginx/lua:/etc/nginx/lua
    command: [
        "/usr/local/openresty/nginx/sbin/nginx",
        "-g",
        "daemon off;",
        "-c",
        # Specify custom nginx.conf that loads lua modules
        "/etc/nginx/nginx.conf",
      ]
    networks:
      - home_network
      # - home_home_network
    restart: unless-stopped

  shaw-family:
    build: ./shaw-family
    networks:
      - home_network
    ports:
      - "3000:3000"
    expose:
      - "3000"
    restart: unless-stopped

  jonshaw199:
    build: ./jonshaw199
    networks:
      - home_network
    ports:
      - "3001:80"
    expose:
      - "80"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/certificates:/etc/letsencrypt
      - ./nginx/html:/var/www/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - home_network
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    environment:
      TZ: "America/Los_Angeles"
      WEBPASSWORD: "admin"
    volumes:
      - ./pihole:/etc/pihole
      - ./dnsmasq.d:/etc/dnsmasq.d
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "8085:80" # Map Pi-hole's web interface to port 8085
    dns:
      - 127.0.0.1
      - 1.1.1.1
    cap_add:
      - NET_ADMIN # Allows Pi-hole to manage network traffic
    restart: unless-stopped

  wg-easy:
    environment:
      - WG_HOST=jonshaw199.com
      - PASSWORD_HASH=$$2a$$12$$vzotg.wi6CdAgQpvFW7V6.Ru5qwKJls8AseKEKae4Y7oPEzBWuIN6
    image: ghcr.io/wg-easy/wg-easy # :15
    container_name: wg-easy
    networks:
      home_network:
        ipv4_address: 10.42.42.42
        ipv6_address: fdcc:ad94:bacf:61a3::2a
    volumes:
      - /home/jon/wg-easy:/etc/wireguard
      - /lib/modules:/lib/modules:ro
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      # - NET_RAW # ⚠️ Uncomment if using Podman Compose
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1

networks:
  home_network:
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.42.42.0/24
        - subnet: fdcc:ad94:bacf:61a3::/64
  # home_home_network: # Note the `home_` prefix!
  #   external: true
